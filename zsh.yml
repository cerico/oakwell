---
- hosts: webserver
  become: true

  vars_files:
    - config/server

  pre_tasks:
    - name: Update apt cache if needed.
      apt: update_cache=yes cache_valid_time=3600

  handlers:
    - name: restart sshd
      service:
        name: sshd
        state: restarted

  tasks:
    - name: chown to username you login and chmod as required
      file:
        path: /var/www/html
        owner: "{{ deploy_user }}"
        group: "{{ deploy_user }}"
        mode: 0755

    - name: chown to username you login and chmod as required
      file:
        path: /etc/nginx/conf.d
        owner: "{{ deploy_user }}"
        group: "{{ deploy_user }}"
        mode: 0755

    - name: Cloning oh-my-zsh
      git:
        repo=https://github.com/robbyrussell/oh-my-zsh
        dest=~{{ deploy_user }}/.oh-my-zsh
  
    - name: Copy zshenv
      copy:
        src: server/zshenv
        dest: ~{{ deploy_user }}/.zshenv
    
    - name: Copy zshrc
      copy:
        src: server/zshrc
        dest: ~{{ deploy_user }}/.zshrc

    - name: Copy zsh theme
      copy:
        src: server/cerico.zsh-theme
        dest: ~{{ deploy_user }}/.oh-my-zsh/themes/cerico.zsh-theme
   
    - name: Copy motd
      copy:
        src: server/motd
        dest: /etc/profile.d/motd.sh

    - name: Copy pm2 motd
      copy:
        src: server/pm2
        dest: /etc/profile.d/pm2.sh

    - name: Copy passenger motd
      copy:
        src: server/passenger
        dest: /etc/profile.d/passenger.sh

    - name: Copy passenger formatter
      copy:
        src: server/passenger-formatter
        dest: "/home/{{ deploy_user }}/passenger-formatter.sh"
        mode: 0755
  
    - name: change user shell to zsh 
      become: yes
      user:
        name: "{{ deploy_user }}"
        shell: /bin/zsh

    - name: "update hostnames"
      hostname:
        name: "{{ hostname }}"

    - name: Install PM2
      npm:
        name: pm2
        global: yes
 
    - name: make pm2 startup at system restart
      command: pm2 startup systemd -u {{ deploy_user }} --hp /home/{{ deploy_user }}
      become: true
      become_user: root

    - name: Install snapd
      ansible.builtin.apt:
        name: snapd
        state: present

    - name: Install snap core
      community.general.snap:
        name: core

    - name: Remove Certbot from apt
      ansible.builtin.apt:
        name: certbot
        state: absent

    - name: install certbot ubuntu
      apt: pkg=certbot state=latest
      with_items:
        - certbot

    - name: change the path to letsencrypt
      set_fact:
        letsencrypt_path: "/usr/bin/letsencrypt"

    - name: Copy certbot script
      copy:
        src: server/certbot
        dest: "/home/{{ deploy_user }}/cert.sh"
        mode: 0755
      
    - name: copy certbot cron
      copy:
        src: server/cron
        dest: "/etc/cron.d/encrypt"
