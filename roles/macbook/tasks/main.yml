- name: Cloning oh-my-zsh
  git:
    repo=https://github.com/robbyrussell/oh-my-zsh
    dest=~{{ macbook_user }}/.oh-my-zsh
  
- name: Copy zshenv
  copy:
    src: macbook/zshenv
    dest: ~{{ macbook_user }}/.zshenv
    
- name: Copy zshrc
  copy:
    src: macbook/zshrc
    dest: ~{{ macbook_user }}/.zshrc

- name: Copy zfiles
  copy:
    src: macbook/zfiles
    dest: ~{{ macbook_user }}/zfiles

- name: Copy zsh theme
  copy:
    src: server/cerico.zsh-theme
    dest: ~{{ macbook_user }}/.oh-my-zsh/themes/cerico.zsh-theme

- name: change user shell to zsh 
  become: true
  become_user: root
  user:
    name: "{{ macbook_user }}"
    shell: /bin/zsh

- name: Clone Rbenv
  git: repo=git://github.com/rbenv/rbenv.git dest=~{{ macbook_user }}/.rbenv

- name: Clone rbenv build
  git: repo=git://github.com/rbenv/ruby-build.git dest=~{{ macbook_user }}/.rbenv/plugins/ruby-build

- name: Add Rbenv build to .zshrc
  lineinfile:
    dest: "~{{ macbook_user }}/.zshrc"
    regexp: 'export PATH="\$HOME/.rbenv/plugins/ruby-build/bin:\$PATH"'
    line: 'export PATH="$HOME/.rbenv/plugins/ruby-build/bin:$PATH"'
    state: present

- name: Clone rbenv vars
  git: repo=git://github.com/rbenv/rbenv-vars.git dest=~{{ macbook_user }}/.rbenv/plugins/rbenv-vars

- name: check ruby {{ ruby_version }} is installed for system
  shell: "~{{ macbook_user }}/.rbenv/bin/rbenv versions | grep {{ruby_version}}"
  register: ruby_installed
  changed_when: false
  ignore_errors: yes
  check_mode: no

- name: rbenv install ruby
  command: "~{{ macbook_user }}/.rbenv/bin/rbenv install --verbose {{ruby_version}}"
  when:
    - ruby_installed.rc != 0
  async: 3600
  poll: 10

- name: check if current system ruby version is {{ ruby_version }}
  shell: "~{{ macbook_user }}/.rbenv/bin/rbenv version | cut -d ' ' -f 1 | grep -Fx '{{ ruby_version }}'"
  register: current_ruby_selected
  changed_when: false
  ignore_errors: yes
  check_mode: no

- name: rbenv set global ruby version and rehash
  command: "~{{ macbook_user }}/.rbenv/bin/rbenv global {{ruby_version}} && rbenv rehash"
  when:
    - current_ruby_selected.rc != 0

- name: add email                                 
  command: git config --global user.email {{ email }}

- name: 'install bundler v2'
  command: "~{{ macbook_user }}/.rbenv/shims/gem install bundler -v 2.1.4"

- name: 'install rails'
  command: "~{{ macbook_user }}/.rbenv/shims/gem install rails"

- name: Create users
  postgresql_user:
    name: "{{ macbook_user }}"
    role_attr_flags: CREATEDB

- name: add community.general                             
  command: ansible-galaxy collection install community.general

- name: add ansistrano                              
  command:  ansible-galaxy install ansistrano.deploy